//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_jobproject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class mvc_prodbEntities : DbContext
    {
        public mvc_prodbEntities()
            : base("name=mvc_prodbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<appli_tab> appli_tab { get; set; }
        public virtual DbSet<comp_reg> comp_reg { get; set; }
        public virtual DbSet<job_tab> job_tab { get; set; }
        public virtual DbSet<login_tab> login_tab { get; set; }
        public virtual DbSet<user_reg> user_reg { get; set; }
    
        public virtual int sp_compreg(Nullable<int> cid, string cname, string cemail, string cnumber, string caddr, string cweb)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            var cemailParameter = cemail != null ?
                new ObjectParameter("cemail", cemail) :
                new ObjectParameter("cemail", typeof(string));
    
            var cnumberParameter = cnumber != null ?
                new ObjectParameter("cnumber", cnumber) :
                new ObjectParameter("cnumber", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cwebParameter = cweb != null ?
                new ObjectParameter("cweb", cweb) :
                new ObjectParameter("cweb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_compreg", cidParameter, cnameParameter, cemailParameter, cnumberParameter, caddrParameter, cwebParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string uname, string pwd, string ltype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var ltypeParameter = ltype != null ?
                new ObjectParameter("ltype", ltype) :
                new ObjectParameter("ltype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unameParameter, pwdParameter, ltypeParameter);
        }
    
        public virtual int sp_userreg(Nullable<int> uid, string uname, Nullable<int> uage, string uaddress, string uemail, string photo, string phone, string skills, string exp, string uqual)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var uageParameter = uage.HasValue ?
                new ObjectParameter("uage", uage) :
                new ObjectParameter("uage", typeof(int));
    
            var uaddressParameter = uaddress != null ?
                new ObjectParameter("uaddress", uaddress) :
                new ObjectParameter("uaddress", typeof(string));
    
            var uemailParameter = uemail != null ?
                new ObjectParameter("uemail", uemail) :
                new ObjectParameter("uemail", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            var uqualParameter = uqual != null ?
                new ObjectParameter("uqual", uqual) :
                new ObjectParameter("uqual", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userreg", uidParameter, unameParameter, uageParameter, uaddressParameter, uemailParameter, photoParameter, phoneParameter, skillsParameter, expParameter, uqualParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxid");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginCount(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginCount", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual int sp_jobinsert(string jtitle, string jdesc, string jskills, Nullable<int> compid, Nullable<System.DateTime> cdate, string status, Nullable<int> jexp)
        {
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jdescParameter = jdesc != null ?
                new ObjectParameter("jdesc", jdesc) :
                new ObjectParameter("jdesc", typeof(string));
    
            var jskillsParameter = jskills != null ?
                new ObjectParameter("jskills", jskills) :
                new ObjectParameter("jskills", typeof(string));
    
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            var cdateParameter = cdate.HasValue ?
                new ObjectParameter("cdate", cdate) :
                new ObjectParameter("cdate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var jexpParameter = jexp.HasValue ?
                new ObjectParameter("jexp", jexp) :
                new ObjectParameter("jexp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobinsert", jtitleParameter, jdescParameter, jskillsParameter, compidParameter, cdateParameter, statusParameter, jexpParameter);
        }
    
        public virtual ObjectResult<sp_viewjobs_Result> sp_viewjobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_viewjobs_Result>("sp_viewjobs");
        }
    
        public virtual int sp_jobsearch(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearch", qryParameter);
        }
    
        public virtual int sp_applycv(Nullable<int> uid, Nullable<int> jid, string resume, string apst, Nullable<System.DateTime> apdt)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var apstParameter = apst != null ?
                new ObjectParameter("apst", apst) :
                new ObjectParameter("apst", typeof(string));
    
            var apdtParameter = apdt.HasValue ?
                new ObjectParameter("apdt", apdt) :
                new ObjectParameter("apdt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applycv", uidParameter, jidParameter, resumeParameter, apstParameter, apdtParameter);
        }
    }
}
